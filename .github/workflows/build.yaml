name: Test, build, and publish to ghcr.io
on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'Cargo.toml'
      - '.github/workflows/**'
      - '.nais/**'
env:
  IMAGE: ghcr.io/${{ github.repository }}
jobs:
  set-version:
    name: Generate version
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - id: version
        run: echo ::set-output name=version::"$(date +'%Y-%m-%d')-${GITHUB_SHA::8}"
      - id: semver
        run: echo ::set-output name=semver::"$(cat Cargo.toml | grep -e '^version' | cut -d\" -f2)"
      - id: tag
        run: echo ::set-output name=tag::"${IMAGE}:${{ steps.version.outputs.version }}"
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.tag.outputs.tag }}
      semver: ${{ steps.semver.outputs.semver }}
  build:
    name: Test, build and push Docker image
    runs-on: ubuntu-20.04
    needs: set-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v1
        id: buildx
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-dockerx6-${{ needs.set-version.outputs.semver }}
          restore-keys: |
            ${{ runner.os }}-dockerx6-
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry/index
            ~/.cargo/registry/cache
            ~/.cargo/git
            target
          key: musl-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Ensure cargo dirs exist
        run: |
          mkdir -p ~/.cargo/{git,registry}
      - name: Test
        run: |
          docker run --rm -t \
              --mount type=bind,source=${{ github.workspace }},target=/volume \
              --mount type=bind,source=$HOME/.cargo/registry,target=/root/.cargo/registry \
              --mount type=bind,source=$HOME/.cargo/git,target=/root/.cargo/git \
              clux/muslrust:stable \
              cargo test --release
      - name: Build binary
        run: |
          docker run --rm -t \
              --mount type=bind,source=${{ github.workspace }},target=/volume \
              --mount type=bind,source=$HOME/.cargo/registry,target=/root/.cargo/registry \
              --mount type=bind,source=$HOME/.cargo/git,target=/root/.cargo/git \
              clux/muslrust:stable \
              cargo build --release
          cp target/x86_64-unknown-linux-musl/release/hahaha .
      - name: Build and publish Docker image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ needs.set-version.outputs.tag }}
          cache-from: type=gha,scope=version5
          cache-to: type=gha,scope=version5,mode=max
  nais-yaml:
    name: Push to nais-yaml
    runs-on: ubuntu-latest
    needs: [set-version, build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout hahaha
        uses: actions/checkout@v2
        with:
          path: hahaha
      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.NAIS_APP_PRIVATE_KEY }}
          app-id: ${{ secrets.NAIS_APP_ID }}
          repo: navikt/nais-yaml
      - uses: actions/checkout@v2
        with:
          repository: navikt/nais-yaml
          token: ${{ steps.get-token.outputs.token }}
          path: nais-yaml
      - run: |
          cd hahaha
          res=".nais"
          static_file="../nais-yaml/templates/hahaha.yaml"
          cat $res/hahaha.yaml $res/clusterrole.yaml $res/clusterrolebinding.yaml $res/networkpolicy.yaml > $static_file
      - run: |
           cd nais-yaml
           git config user.name "$GITHUB_ACTOR"
           git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
           sed -E -i "s#image: ${IMAGE}:.+#image: ${{ needs.set-version.outputs.tag }}#" vars/global.yaml
           git add .
           git --no-pager diff --cached
           git status
           git commit -a -m "ci: Bump HAHAHA to version ${{ needs.set-version.outputs.version }}"
           git push
name: Test, build, and publish to ghcr.io
on:
  push:
    branches:
      - 'main'
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'Cargo.toml'
      - '.github/workflows/**'
      - '.nais/**'
env:
  IMAGE: ghcr.io/${{ github.repository }}
jobs:
  set-version:
    name: Generate version
    runs-on: ubuntu-20.04
    steps:
      - id: generate_version
        run: echo ::set-output version="$(date +'%Y-%m-%d')-${GITHUB_SHA::8}"
    outputs:
      version: ${{ steps.generate_version.outputs.version }}
  bogus:
    runs-on: ubuntu-20.04
    needs: set-version
    steps:
      - run: echo ${{ steps.get-token.outputs.token }}
  build:
    name: Test, build and push Docker image
    runs-on: ubuntu-20.04
    needs: set-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry/
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git/
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target/
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Set up toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release
      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Login to GitHub Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        run: |
          cp target/release/hahaha .
          docker build -t ${IMAGE}:${{ needs.set-version.outputs.version }} .
          docker push ${IMAGE}:${{ needs.set-version.outputs.version }}
  nais-yaml:
    name: Push to nais-yaml
    runs-on: ubuntu-latest
    needs: [set-version, build]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout hahaha
        uses: actions/checkout@v2
        with:
          path: hahaha
      - uses: navikt/github-app-token-generator@v1
        id: get-token
        with:
          private-key: ${{ secrets.NAIS_APP_PRIVATE_KEY }}
          app-id: ${{ secrets.NAIS_APP_ID }}
          repo: navikt/nais-yaml
      - uses: actions/checkout@v2
        with:
          repository: navikt/nais-yaml
          token: ${{ steps.get-token.outputs.token }}
          path: nais-yaml
      - run: |
          cd hahaha
          res=".nais"
          static_file="../nais-yaml/templates/hahaha.yaml"
          cat $res/hahaha.yaml $res/clusterrole.yaml $res/clusterrolebinding.yaml $res/networkpolicy.yaml > $static_file
          
          echo "just checking that we get here"
          cat $static_file

      # - run: |
      #     cd nais-yaml
      #     git config user.name "$GITHUB_ACTOR"
      #     git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      #     sed -E -i "s#image: ${IMAGE}:.+#image: ${IMAGE}:${{ needs.set-version.outputs.version }}#" vars/global.yaml
      #     git add .
      #     git --no-pager diff --cached
      #     git status
      #     git commit -a -m "ci: Bump HAHAHA to version ${{ needs.set-version.outputs.version }}"
      #     git push